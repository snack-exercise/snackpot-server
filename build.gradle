plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.soma'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// 설정 추가 시작
bootJar.enabled = false // main 메서드 없이 라이브러리 역할을 하는 모듈이므로 BootJar이 아닌, jar파일로 생성되고, 다른 프로젝트에 첨부

subprojects { // 이 블록안의 설정은 프로젝트의 모든 모듈에 적용됨
	apply plugin: 'java'
	apply plugin: 'java-library' // build.gradle에서 implementation 대신 api()를 사용하려면 java-library 사용
	apply plugin: 'org.springframework.boot'
	// spring boot dependency를 사용하여 사용중인 부트 버전에서 자동으로 의존성을 가져온다.
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'jacoco'

	jacoco {
		toolVersion = "0.8.8"
	}

	// test 결과를 report로 생성
	jacocoTestReport {
		reports {
			xml.required = false
			csv.required = false
			html.required = true
		}
		// dependsOn : 이 작업에 지정된 종속성을 추가
//		dependsOn test // jacocoTestReport 에 test라는 종속성을 추가
		finalizedBy 'jacocoTestCoverageVerification'
	}

	// jacocoTestReport 결과를 바탕으로 coverage가 만족되었는지를 체크
	jacocoTestCoverageVerification {
		violationRules {

			rule {
				enabled = true
				//코드 버커리지 체크 기준
				element = 'CLASS'

				limit {
					counter = 'METHOD'
					value = 'COVEREDRATIO'
					minimum = 0.0
				}

				excludes = ["*.Q*"] // querydsl Qdomain 테스트 제외
			}
		}
	}

	sourceCompatibility = 17
	targetCompatibility = 17

	repositories {
		mavenCentral()
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter'
		// test
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		// lombok
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
	}

	test {
		useJUnitPlatform()
		finalizedBy 'jacocoTestReport' // test 작업이 끝나고 jacocoTestReport를 실행
	}
}
// 설정 추가 끝
